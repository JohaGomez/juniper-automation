package utils

import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject
import com.kms.katalon.core.annotation.Keyword
import com.kms.katalon.core.webui.driver.DriverFactory
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI
import com.kms.katalon.core.util.KeywordUtil
import org.openqa.selenium.By
import org.openqa.selenium.WebDriver
import org.openqa.selenium.WebElement
import org.openqa.selenium.StaleElementReferenceException
import java.util.List


public class cambiartarifayseleccionarvuelo {

	@Keyword
	def cambiarTarifaYSeleccionarVuelo() {
		WebDriver driver = DriverFactory.getWebDriver()

		try {
			WebUI.comment("üîç Buscando bot√≥n de reserva...")
			WebElement botonReserva = encontrarBotonReserva(driver)

			if (botonReserva != null) {
				WebUI.comment("‚úÖ Bot√≥n encontrado, haciendo clic...")
				botonReserva.click()
			} else {
				WebUI.comment("‚ùå Bot√≥n no encontrado. Cambiando opci√≥n de tarifa...")
				cambiarOpcionDeRadio(driver)
				WebUI.delay(2) // Peque√±a espera para que recargue el DOM

				WebElement nuevoBoton = encontrarBotonReserva(driver)
				if (nuevoBoton != null) {
					WebUI.comment("üîÅ Bot√≥n encontrado tras cambiar opci√≥n. Haciendo clic...")
					nuevoBoton.click()
				} else {
					WebUI.comment("üö® No se encontr√≥ el bot√≥n de reserva tras intentar recuperar.")
					KeywordUtil.markFailed("No se pudo encontrar el bot√≥n de reserva")
				}
			}
		} catch (StaleElementReferenceException e) {
			WebUI.comment("‚ö†Ô∏è Elemento stale. Reintentando desde cero...")
			WebUI.delay(1)
			cambiarTarifaYSeleccionarVuelo() // Reintento recursivo
		} catch (Exception e) {
			WebUI.comment("üí• Error inesperado: " + e.message)
			KeywordUtil.markFailed("Excepci√≥n durante selecci√≥n de vuelo: " + e.message)
		}
	}

	// Funci√≥n que intenta encontrar el bot√≥n de reserva
	private WebElement encontrarBotonReserva(WebDriver driver) {
		try {
			List<WebElement> resultados = driver.findElements(By.cssSelector(".flight-result"))
			for (WebElement resultado : resultados) {
				List<WebElement> botones = resultado.findElements(By.cssSelector(".flight-result__booking-button"))
				if (!botones.isEmpty()) {
					return botones[0]
				}
			}
		} catch (StaleElementReferenceException e) {
			WebUI.comment("üîÑ DOM cambi√≥ mientras se buscaba el bot√≥n. Reintentando...")
			return null
		}
		return null
	}

	// Funci√≥n para cambiar de opci√≥n de radio
	private void cambiarOpcionDeRadio(WebDriver driver) {
		List<WebElement> radios = driver.findElements(By.cssSelector("input[type='radio'][name='result-optin-radio']"))
		if (!radios.isEmpty()) {
			for (WebElement radio : radios) {
				if (!radio.isSelected()) {
					radio.click()
					WebUI.comment("üîò Opci√≥n de tarifa cambiada.")
					break
				}
			}
		} else {
			WebUI.comment("‚ö†Ô∏è No se encontraron opciones de radio.")
		}
	}
}
